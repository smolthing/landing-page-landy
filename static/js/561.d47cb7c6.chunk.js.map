{"version":3,"file":"static/js/561.d47cb7c6.chunk.js","mappings":"gMAGO,MAAMA,GAAoBC,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kcAO9BC,EAAAA,EAAMC,YAKLC,GAAOA,EAAEC,KAAO,UAAY,WAC/BD,GAAOA,EAAEC,KAAO,IAAM,MChB7B,SAASC,EAASC,GACvB,OAAe,OAARA,QAAwBC,IAARD,GAAqBA,IAAQA,EAAIE,MAC1D,C,aCGA,MAqCA,EArCoBC,KAClB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAEvCC,EAAkBC,IACtB,MAAMC,EDLeC,EACvBC,EACAC,KAEA,GAAsB,qBAAXV,OACT,OAAO,EAET,MAAMW,EAASD,EAAM,YAAc,aACnC,IAAIE,EAAS,EAQmD,IAADC,EAI/D,OAXIhB,EAASY,GACXG,EAAUH,EAAkBC,EAAM,cAAgB,eACzCD,aAAkBK,SAC3BF,EAASH,EAAOM,gBAAgBJ,GACvBF,IACTG,EAAUH,EAAuBE,IAE/BF,IAAWZ,EAASY,IAA6B,kBAAXG,IACxCA,EACkB,QADZC,GAAKJ,EAAuBO,eAAkBP,GACjDM,uBAAe,IAAAF,OAAA,EADTA,EACYF,IAEhBC,CAAM,ECfWJ,CAAUF,EAAMG,QAAQ,IAEzCP,GAAcK,EAAgB,IACjCJ,GAAc,GACLI,GAAiB,KAC1BJ,GAAc,EAChB,GAGFc,EAAAA,EAAAA,YAAU,KACRjB,OAAOkB,iBAAiB,SAAUb,GAC3B,KACLL,OAAOmB,oBAAoB,SAAUd,EAAe,IAGrD,IAWH,OACEe,EAAAA,EAAAA,KAAC/B,EAAiB,CAACgC,QAVJC,KACCC,SAASC,eAAe,SAChCC,eAAe,CACrBC,SAAU,SACVC,MAAO,MACPC,OAAQ,WACR,EAIoChC,KAAMM,EAAW2B,UACrDT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACC,IAAI,iBAAiBC,MAAM,OAAOC,OAAO,UAC9B,C","sources":["common/ScrollToTop/styles.ts","common/utils/getWindow.ts","common/ScrollToTop/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { theme } from '../../styles/colors';\r\n\r\nexport const ScrollUpContainer = styled(\"div\")<any>`\r\n  padding: 10px;\r\n  position: fixed;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background: ${theme.background};\r\n  text-align: center;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease-in-out;\r\n  visibility: ${(p) => (p.show ? \"visible\" : \"hidden\")};\r\n  opacity: ${(p) => (p.show ? \"1\" : \"0\")};\r\n  display: flex;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgb(224, 224, 224);\r\n  }\r\n\r\n  @media screen and (max-width: 1240px) {\r\n    display: none;\r\n  }\r\n`;\r\n","export function isWindow(obj: any) {\r\n  return obj !== null && obj !== undefined && obj === obj.window;\r\n}\r\n\r\nexport const getScroll = (\r\n  target: HTMLElement | Window | Document | null,\r\n  top: boolean\r\n): number => {\r\n  if (typeof window === \"undefined\") {\r\n    return 0;\r\n  }\r\n  const method = top ? \"scrollTop\" : \"scrollLeft\";\r\n  let result = 0;\r\n  if (isWindow(target)) {\r\n    result = (target as Window)[top ? \"pageYOffset\" : \"pageXOffset\"];\r\n  } else if (target instanceof Document) {\r\n    result = target.documentElement[method];\r\n  } else if (target) {\r\n    result = (target as HTMLElement)[method];\r\n  }\r\n  if (target && !isWindow(target) && typeof result !== \"number\") {\r\n    result = ((target as HTMLElement).ownerDocument || (target as Document))\r\n      .documentElement?.[method];\r\n  }\r\n  return result;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Image } from \"../Image\";\r\nimport { ScrollUpContainer } from \"./styles\";\r\nimport { getScroll } from \"../utils/getWindow\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = (event: any) => {\r\n    const offsetFromTop = getScroll(event.target, true);\r\n\r\n    if (!showScroll && offsetFromTop > 350) {\r\n      setShowScroll(true);\r\n    } else if (offsetFromTop <= 350) {\r\n      setShowScroll(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", checkScrollTop);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\r\n      <Image src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\r\n    </ScrollUpContainer>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"],"names":["ScrollUpContainer","styled","_templateObject","_taggedTemplateLiteral","theme","background","p","show","isWindow","obj","undefined","window","ScrollToTop","showScroll","setShowScroll","useState","checkScrollTop","event","offsetFromTop","getScroll","target","top","method","result","_documentElement","Document","documentElement","ownerDocument","useEffect","addEventListener","removeEventListener","_jsx","onClick","scrollUp","document","getElementById","scrollIntoView","behavior","block","inline","children","Image","src","width","height"],"sourceRoot":""}